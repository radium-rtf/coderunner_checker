// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: checker/v1/checker.proto

package checker

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Status int32

const (
	Status_STATUS_UNKNOWN      Status = 0
	Status_STATUS_SUCCESS      Status = 1
	Status_STATUS_WRONG_ANSWER Status = 2
	Status_STATUS_TIMEOUT      Status = 3
	Status_STATUS_OOM_KILLED   Status = 4
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "STATUS_UNKNOWN",
		1: "STATUS_SUCCESS",
		2: "STATUS_WRONG_ANSWER",
		3: "STATUS_TIMEOUT",
		4: "STATUS_OOM_KILLED",
	}
	Status_value = map[string]int32{
		"STATUS_UNKNOWN":      0,
		"STATUS_SUCCESS":      1,
		"STATUS_WRONG_ANSWER": 2,
		"STATUS_TIMEOUT":      3,
		"STATUS_OOM_KILLED":   4,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_checker_v1_checker_proto_enumTypes[0].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_checker_v1_checker_proto_enumTypes[0]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_checker_v1_checker_proto_rawDescGZIP(), []int{0}
}

type TestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lang             string               `protobuf:"bytes,1,opt,name=lang,proto3" json:"lang,omitempty"`
	Code             string               `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Timeout          *durationpb.Duration `protobuf:"bytes,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
	MemoryLimitBytes int64                `protobuf:"varint,4,opt,name=memory_limit_bytes,json=memoryLimitBytes,proto3" json:"memory_limit_bytes,omitempty"`
	FullInfoWa       bool                 `protobuf:"varint,5,opt,name=full_info_wa,json=fullInfoWa,proto3" json:"full_info_wa,omitempty"`
}

func (x *TestRequest) Reset() {
	*x = TestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_v1_checker_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestRequest) ProtoMessage() {}

func (x *TestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_checker_v1_checker_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestRequest.ProtoReflect.Descriptor instead.
func (*TestRequest) Descriptor() ([]byte, []int) {
	return file_checker_v1_checker_proto_rawDescGZIP(), []int{0}
}

func (x *TestRequest) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *TestRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *TestRequest) GetTimeout() *durationpb.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

func (x *TestRequest) GetMemoryLimitBytes() int64 {
	if x != nil {
		return x.MemoryLimitBytes
	}
	return 0
}

func (x *TestRequest) GetFullInfoWa() bool {
	if x != nil {
		return x.FullInfoWa
	}
	return false
}

type ArrayTestsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tests   []*ArrayTestsRequest_TestCase `protobuf:"bytes,1,rep,name=tests,proto3" json:"tests,omitempty"`
	Request *TestRequest                  `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *ArrayTestsRequest) Reset() {
	*x = ArrayTestsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_v1_checker_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArrayTestsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArrayTestsRequest) ProtoMessage() {}

func (x *ArrayTestsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_checker_v1_checker_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArrayTestsRequest.ProtoReflect.Descriptor instead.
func (*ArrayTestsRequest) Descriptor() ([]byte, []int) {
	return file_checker_v1_checker_proto_rawDescGZIP(), []int{1}
}

func (x *ArrayTestsRequest) GetTests() []*ArrayTestsRequest_TestCase {
	if x != nil {
		return x.Tests
	}
	return nil
}

func (x *ArrayTestsRequest) GetRequest() *TestRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type FileTestsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url     string       `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Request *TestRequest `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
}

func (x *FileTestsRequest) Reset() {
	*x = FileTestsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_v1_checker_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileTestsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileTestsRequest) ProtoMessage() {}

func (x *FileTestsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_checker_v1_checker_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileTestsRequest.ProtoReflect.Descriptor instead.
func (*FileTestsRequest) Descriptor() ([]byte, []int) {
	return file_checker_v1_checker_proto_rawDescGZIP(), []int{2}
}

func (x *FileTestsRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *FileTestsRequest) GetRequest() *TestRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

type TestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status   Status               `protobuf:"varint,1,opt,name=status,proto3,enum=checker.Status" json:"status,omitempty"`
	Number   int64                `protobuf:"varint,2,opt,name=number,proto3" json:"number,omitempty"`
	Duration *durationpb.Duration `protobuf:"bytes,3,opt,name=duration,proto3" json:"duration,omitempty"`
	// Types that are assignable to Message:
	//
	//	*TestResponse_Text
	//	*TestResponse_WrongAnswer_
	Message isTestResponse_Message `protobuf_oneof:"message"`
}

func (x *TestResponse) Reset() {
	*x = TestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_v1_checker_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestResponse) ProtoMessage() {}

func (x *TestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_checker_v1_checker_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestResponse.ProtoReflect.Descriptor instead.
func (*TestResponse) Descriptor() ([]byte, []int) {
	return file_checker_v1_checker_proto_rawDescGZIP(), []int{3}
}

func (x *TestResponse) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_STATUS_UNKNOWN
}

func (x *TestResponse) GetNumber() int64 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *TestResponse) GetDuration() *durationpb.Duration {
	if x != nil {
		return x.Duration
	}
	return nil
}

func (m *TestResponse) GetMessage() isTestResponse_Message {
	if m != nil {
		return m.Message
	}
	return nil
}

func (x *TestResponse) GetText() string {
	if x, ok := x.GetMessage().(*TestResponse_Text); ok {
		return x.Text
	}
	return ""
}

func (x *TestResponse) GetWrongAnswer() *TestResponse_WrongAnswer {
	if x, ok := x.GetMessage().(*TestResponse_WrongAnswer_); ok {
		return x.WrongAnswer
	}
	return nil
}

type isTestResponse_Message interface {
	isTestResponse_Message()
}

type TestResponse_Text struct {
	Text string `protobuf:"bytes,4,opt,name=text,proto3,oneof"`
}

type TestResponse_WrongAnswer_ struct {
	WrongAnswer *TestResponse_WrongAnswer `protobuf:"bytes,5,opt,name=wrong_answer,json=wrongAnswer,proto3,oneof"`
}

func (*TestResponse_Text) isTestResponse_Message() {}

func (*TestResponse_WrongAnswer_) isTestResponse_Message() {}

type ArrayTestsRequest_TestCase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stdin  string `protobuf:"bytes,1,opt,name=stdin,proto3" json:"stdin,omitempty"`
	Stdout string `protobuf:"bytes,2,opt,name=stdout,proto3" json:"stdout,omitempty"`
}

func (x *ArrayTestsRequest_TestCase) Reset() {
	*x = ArrayTestsRequest_TestCase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_v1_checker_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArrayTestsRequest_TestCase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArrayTestsRequest_TestCase) ProtoMessage() {}

func (x *ArrayTestsRequest_TestCase) ProtoReflect() protoreflect.Message {
	mi := &file_checker_v1_checker_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArrayTestsRequest_TestCase.ProtoReflect.Descriptor instead.
func (*ArrayTestsRequest_TestCase) Descriptor() ([]byte, []int) {
	return file_checker_v1_checker_proto_rawDescGZIP(), []int{1, 0}
}

func (x *ArrayTestsRequest_TestCase) GetStdin() string {
	if x != nil {
		return x.Stdin
	}
	return ""
}

func (x *ArrayTestsRequest_TestCase) GetStdout() string {
	if x != nil {
		return x.Stdout
	}
	return ""
}

type TestResponse_WrongAnswer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Input    string `protobuf:"bytes,1,opt,name=input,proto3" json:"input,omitempty"`
	Actual   string `protobuf:"bytes,2,opt,name=actual,proto3" json:"actual,omitempty"`
	Expected string `protobuf:"bytes,3,opt,name=expected,proto3" json:"expected,omitempty"`
}

func (x *TestResponse_WrongAnswer) Reset() {
	*x = TestResponse_WrongAnswer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checker_v1_checker_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestResponse_WrongAnswer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestResponse_WrongAnswer) ProtoMessage() {}

func (x *TestResponse_WrongAnswer) ProtoReflect() protoreflect.Message {
	mi := &file_checker_v1_checker_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestResponse_WrongAnswer.ProtoReflect.Descriptor instead.
func (*TestResponse_WrongAnswer) Descriptor() ([]byte, []int) {
	return file_checker_v1_checker_proto_rawDescGZIP(), []int{3, 0}
}

func (x *TestResponse_WrongAnswer) GetInput() string {
	if x != nil {
		return x.Input
	}
	return ""
}

func (x *TestResponse_WrongAnswer) GetActual() string {
	if x != nil {
		return x.Actual
	}
	return ""
}

func (x *TestResponse_WrongAnswer) GetExpected() string {
	if x != nil {
		return x.Expected
	}
	return ""
}

var File_checker_v1_checker_proto protoreflect.FileDescriptor

var file_checker_v1_checker_proto_rawDesc = []byte{
	0x0a, 0x18, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x65, 0x72, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70,
	0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf2, 0x01, 0x0a, 0x0b, 0x54,
	0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x04, 0x6c, 0x61,
	0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0d, 0xfa, 0x42, 0x0a, 0x72, 0x08, 0x52,
	0x06, 0x70, 0x79, 0x74, 0x68, 0x6f, 0x6e, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x1b, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x41, 0x0a, 0x07, 0x74, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0c, 0xfa, 0x42, 0x09, 0xaa, 0x01, 0x06, 0x1a, 0x02,
	0x08, 0x1e, 0x32, 0x00, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x3e, 0x0a,
	0x12, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x62, 0x79,
	0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x42, 0x10, 0xfa, 0x42, 0x0d, 0x22, 0x0b,
	0x18, 0x80, 0x80, 0x80, 0x80, 0x01, 0x28, 0x80, 0x80, 0x80, 0x03, 0x52, 0x10, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x20, 0x0a,
	0x0c, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x5f, 0x77, 0x61, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x66, 0x75, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x57, 0x61, 0x22,
	0xcc, 0x01, 0x0a, 0x11, 0x41, 0x72, 0x72, 0x61, 0x79, 0x54, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x43, 0x0a, 0x05, 0x74, 0x65, 0x73, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x41,
	0x72, 0x72, 0x61, 0x79, 0x54, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x92, 0x01,
	0x02, 0x08, 0x01, 0x52, 0x05, 0x74, 0x65, 0x73, 0x74, 0x73, 0x12, 0x38, 0x0a, 0x07, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x07, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x38, 0x0a, 0x08, 0x54, 0x65, 0x73, 0x74, 0x43, 0x61, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x64, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x73, 0x74, 0x64, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x22, 0x68,
	0x0a, 0x10, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x88, 0x01, 0x01, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x38,
	0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52,
	0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xea, 0x02, 0x0a, 0x0c, 0x54, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x65, 0x72, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x82,
	0x01, 0x02, 0x10, 0x01, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x06,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x22, 0x02, 0x28, 0x01, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x3f, 0x0a,
	0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0xfa, 0x42, 0x05, 0xaa,
	0x01, 0x02, 0x08, 0x01, 0x52, 0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x12, 0x46, 0x0a, 0x0c, 0x77, 0x72, 0x6f, 0x6e, 0x67, 0x5f, 0x61, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x65, 0x72, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x57, 0x72, 0x6f, 0x6e, 0x67, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x48, 0x00, 0x52,
	0x0b, 0x77, 0x72, 0x6f, 0x6e, 0x67, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x1a, 0x57, 0x0a, 0x0b,
	0x57, 0x72, 0x6f, 0x6e, 0x67, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x70,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x70,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x42, 0x0e, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x03, 0xf8, 0x42, 0x01, 0x2a, 0x74, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55,
	0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01, 0x12, 0x17, 0x0a, 0x13, 0x53, 0x54, 0x41, 0x54, 0x55,
	0x53, 0x5f, 0x57, 0x52, 0x4f, 0x4e, 0x47, 0x5f, 0x41, 0x4e, 0x53, 0x57, 0x45, 0x52, 0x10, 0x02,
	0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x4f,
	0x55, 0x54, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4f,
	0x4f, 0x4d, 0x5f, 0x4b, 0x49, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x04, 0x32, 0xb7, 0x01, 0x0a, 0x07,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x52, 0x0a, 0x05, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x12, 0x1a, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x41, 0x72, 0x72, 0x61, 0x79,
	0x54, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x22, 0x09, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x3a, 0x01, 0x2a, 0x30, 0x01, 0x12, 0x58, 0x0a, 0x08, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x55, 0x52, 0x4c, 0x12, 0x19, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65,
	0x72, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x65, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x15, 0x2e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x54, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x12, 0x22, 0x0d, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x2d, 0x75, 0x72, 0x6c,
	0x3a, 0x01, 0x2a, 0x30, 0x01, 0x42, 0x47, 0x5a, 0x2b, 0x63, 0x6f, 0x64, 0x65, 0x72, 0x75, 0x6e,
	0x6e, 0x65, 0x72, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x2f, 0x70, 0x6b, 0x67, 0x2f,
	0x67, 0x72, 0x70, 0x63, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x3b, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x65, 0x72, 0x92, 0x41, 0x17, 0x12, 0x15, 0x0a, 0x0e, 0x72, 0x61, 0x64, 0x69, 0x75,
	0x6d, 0x20, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x32, 0x03, 0x31, 0x2e, 0x30, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_checker_v1_checker_proto_rawDescOnce sync.Once
	file_checker_v1_checker_proto_rawDescData = file_checker_v1_checker_proto_rawDesc
)

func file_checker_v1_checker_proto_rawDescGZIP() []byte {
	file_checker_v1_checker_proto_rawDescOnce.Do(func() {
		file_checker_v1_checker_proto_rawDescData = protoimpl.X.CompressGZIP(file_checker_v1_checker_proto_rawDescData)
	})
	return file_checker_v1_checker_proto_rawDescData
}

var file_checker_v1_checker_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_checker_v1_checker_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_checker_v1_checker_proto_goTypes = []interface{}{
	(Status)(0),                        // 0: checker.Status
	(*TestRequest)(nil),                // 1: checker.TestRequest
	(*ArrayTestsRequest)(nil),          // 2: checker.ArrayTestsRequest
	(*FileTestsRequest)(nil),           // 3: checker.FileTestsRequest
	(*TestResponse)(nil),               // 4: checker.TestResponse
	(*ArrayTestsRequest_TestCase)(nil), // 5: checker.ArrayTestsRequest.TestCase
	(*TestResponse_WrongAnswer)(nil),   // 6: checker.TestResponse.WrongAnswer
	(*durationpb.Duration)(nil),        // 7: google.protobuf.Duration
}
var file_checker_v1_checker_proto_depIdxs = []int32{
	7, // 0: checker.TestRequest.timeout:type_name -> google.protobuf.Duration
	5, // 1: checker.ArrayTestsRequest.tests:type_name -> checker.ArrayTestsRequest.TestCase
	1, // 2: checker.ArrayTestsRequest.request:type_name -> checker.TestRequest
	1, // 3: checker.FileTestsRequest.request:type_name -> checker.TestRequest
	0, // 4: checker.TestResponse.status:type_name -> checker.Status
	7, // 5: checker.TestResponse.duration:type_name -> google.protobuf.Duration
	6, // 6: checker.TestResponse.wrong_answer:type_name -> checker.TestResponse.WrongAnswer
	2, // 7: checker.Checker.Check:input_type -> checker.ArrayTestsRequest
	3, // 8: checker.Checker.CheckURL:input_type -> checker.FileTestsRequest
	4, // 9: checker.Checker.Check:output_type -> checker.TestResponse
	4, // 10: checker.Checker.CheckURL:output_type -> checker.TestResponse
	9, // [9:11] is the sub-list for method output_type
	7, // [7:9] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_checker_v1_checker_proto_init() }
func file_checker_v1_checker_proto_init() {
	if File_checker_v1_checker_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_checker_v1_checker_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_v1_checker_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArrayTestsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_v1_checker_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileTestsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_v1_checker_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_v1_checker_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArrayTestsRequest_TestCase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checker_v1_checker_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestResponse_WrongAnswer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_checker_v1_checker_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*TestResponse_Text)(nil),
		(*TestResponse_WrongAnswer_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_checker_v1_checker_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_checker_v1_checker_proto_goTypes,
		DependencyIndexes: file_checker_v1_checker_proto_depIdxs,
		EnumInfos:         file_checker_v1_checker_proto_enumTypes,
		MessageInfos:      file_checker_v1_checker_proto_msgTypes,
	}.Build()
	File_checker_v1_checker_proto = out.File
	file_checker_v1_checker_proto_rawDesc = nil
	file_checker_v1_checker_proto_goTypes = nil
	file_checker_v1_checker_proto_depIdxs = nil
}
